<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:f="urn:acorisoft/forest/ui"
                    xmlns:c="clr-namespace:Acorisoft.FutureGL.Forest.Controls;assembly=Forest"
                    xmlns:s="clr-namespace:Acorisoft.FutureGL.Forest.Controls.Selectors;assembly=Forest"
                    xmlns:s1="clr-namespace:Acorisoft.FutureGL.Forest.Controls.Selectors"
                    xmlns:c1="clr-namespace:Acorisoft.FutureGL.Forest.Controls"
                    xmlns:p="clr-namespace:Acorisoft.FutureGL.Forest.Controls.Panels;assembly=Forest">

    <Style x:Key="ClearStyle.ListBox" TargetType="{x:Type s:ForestListBoxBase}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:ForestListBoxBase}">
                    <Grid>
                        <ScrollViewer Name="PART_ContentHost">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearStyle.ListBoxItem" TargetType="{x:Type s:ForestListBoxItemBase}">
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="Background" Value="{f:BackgroundBrush}" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:ForestListBoxItemBase}">
                    <Border x:Name="PART_Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            CornerRadius="3">
                        <ContentPresenter x:Name="PART_Content"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Thickness x:Key="ComboBoxPadding">10,8,10,8</Thickness>
    <Thickness x:Key="ComboBoxBorderThemeThickness">1,1,1,1</Thickness>
    <Thickness x:Key="ComboBoxAccentBorderThemeThickness">0,0,0,2</Thickness>
    <Thickness x:Key="ComboBoxChevronMargin">8,0,10,0</Thickness>
    <Thickness x:Key="ComboBoxItemMargin">3,2,3,0</Thickness>
    <Thickness x:Key="ComboBoxItemContentMargin">10,8,8,8</Thickness>


    <Style x:Key="ClearStyle.SplitButton.Toggle.Expander" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{f:Brush BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="PART_Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0 3 3 0">
                        <ContentPresenter x:Name="PART_ContentHost"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ClearStyle.SplitButton.Toggle.Action" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{f:Brush BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="PART_Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3 0 0 3">
                        <ContentPresenter x:Name="PART_ContentHost"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource ControlFillColorSecondary}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearStyle.ComboBoxItem" TargetType="{x:Type c1:SplitButtonItem}">
        <Setter Property="Foreground" Value="{f:ForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:SplitButtonItem}">
                    <Grid>
                        <Border x:Name="PART_Bd"
                                Margin="{TemplateBinding Margin}"
                                Padding="16 8"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="PART_Content"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearStyle.SplitButton" TargetType="{x:Type c1:SplitButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="Background" Value="{f:BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{f:Brush BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Popup.PopupAnimation" Value="Slide" />
        <Setter Property="SelectedIndex" Value="0" />
        <!--  WPF doesn't like centering, the animation is ugly and the mouse button sometimes clicks right away.  -->
        <Setter Property="Popup.Placement" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c1:SplitButton}">
                    <Border x:Name="PART_Bd"
                            MinWidth="96"
                            MinHeight="36"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            CornerRadius="3">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <!--
                                    Funky grid - because:
                                    Chevron is over Presenter, ToggleButton is over Chevron, TextBox is over ToggleButton.
                                    But, TextBox is not over Chevron, so ToggleButton still works.
                                -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="48" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0"
                                    CornerRadius="3 0 0 3"
                                    Background="Transparent"/>

                            <Border Grid.Column="1"
                                    CornerRadius="0 3 3 0"
                                    Background="Transparent"/>
                            
                            <ContentPresenter x:Name="PART_Content"
                                                  Grid.Column="0"
                                                  HorizontalAlignment="Stretch"
                                              Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Selection}"
                                                  ContentTemplate="{TemplateBinding ItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False"
                                                  TextElement.Foreground="{TemplateBinding Foreground}" 
                                              VerticalAlignment="Center"/>

                            <Path x:Name="ChevronIcon"
                                      Grid.Column="1"
                                      VerticalAlignment="Center"
                                      Width="16"
                                      Height="16"
                                      Data="F1 M24,24z M0,0z M6,9L6,9 12,15 18,9"
                                      Stretch="Uniform"
                                      Stroke="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5, 0.5">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0" />
                                </Path.RenderTransform>
                            </Path>

                            <ToggleButton x:Name="ActionButton"
                                              Grid.Column="0"
                                              BorderThickness="1"
                                              Command="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Command,Mode=OneWay}"
                                              CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedItem,Mode=OneWay}"
                                          Height="36"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                          Margin="0 0 1 0"
                                              Focusable="False"
                                              Foreground="{TemplateBinding Foreground}"
                                              Style="{StaticResource ClearStyle.SplitButton.Toggle.Action}" />

                            <ToggleButton x:Name="ToggleButton"
                                              Grid.Column="1"
                                          Height="36"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              ClickMode="Press"
                                              Focusable="False"
                                              Foreground="{TemplateBinding Foreground}"
                                          Margin="1 0 0 0"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ClearStyle.SplitButton.Toggle.Expander}" />
                            
                            <Popup x:Name="Popup"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   HorizontalOffset="-12"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   PopupAnimation="Slide"
                                   VerticalOffset="1"
                                   PlacementTarget="{Binding ElementName=PART_Bd}">
                                <Grid Margin="8 8 8 16">
                                    <Grid.Effect>
                                        <DropShadowEffect BlurRadius="14" Direction="270" Opacity="0.12" ShadowDepth="4.5" Color="#AA000000" />
                                    </Grid.Effect>
                                    <Border x:Name="SubmenuBorder"
                                            Background="{f:Brush BackgroundLevel2}"
                                            CornerRadius="8"
                                            SnapsToDevicePixels="True"
                                            Padding="0 16"
                                            MinWidth="192">
                                        <ScrollViewer CanContentScroll="True"
                                                      MaxHeight="384">
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ChevronIcon"
                                                         Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                         From="0"
                                                         To="180"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ChevronIcon"
                                                         Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                         From="180"
                                                         To="0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="SubmenuBorder" Property="MinHeight" Value="32" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    
    <Style TargetType="{x:Type s1:ChromeListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s1:ChromeListBoxItem}">
                    <Border x:Name="PART_Bd"
                            Background="Transparent"
                            CornerRadius="8 8 0 0">
                        <ContentPresenter x:Name="PART_Content" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type s1:ShadowListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s1:ShadowListBoxItem}">
                    <Border x:Name="PART_Bd"
                            CornerRadius="16"
                            Margin="10"
                            Padding="16"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                        <ContentPresenter x:Name="PART_Content"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="ClearStyle.AnchoredItemsControl" TargetType="{x:Type s:AnchoredItemsControl}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type s:AnchoredItemsControl}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                      Padding="{TemplateBinding Padding}"
                                      Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ClearStyle.ComboBoxItem}" TargetType="{x:Type c1:SplitButtonItem}" />
    <Style BasedOn="{StaticResource ClearStyle.SplitButton}" TargetType="{x:Type c1:SplitButton}" />

    <Style TargetType="{x:Type s1:ChromeListBox}" BasedOn="{StaticResource ClearStyle.ListBox}">
        <Setter Property="Background" Value="{f:Brush BackgroundLevel4}" />
    </Style>
    <Style TargetType="{x:Type c1:ListBox}" BasedOn="{StaticResource ClearStyle.ListBox}" />
    <Style TargetType="{x:Type s1:ShadowListBox}" BasedOn="{StaticResource ClearStyle.ListBox}" />
    <Style TargetType="{x:Type c1:ListBoxItem}" BasedOn="{StaticResource ClearStyle.ListBoxItem}" />
</ResourceDictionary>