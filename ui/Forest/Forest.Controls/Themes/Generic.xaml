<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:f="urn:acorisoft/forest/ui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Themes/ScrollViewer.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Themes/Slider.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Themes/Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Drawer.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/ContentControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Island.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Buttons/Buttons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/TabControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Forest.Controls;component/Controls/Selectors/TreeView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow1" Direction="270" ShadowDepth="1" BlurRadius="5" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow2" Direction="270" ShadowDepth="1.5" BlurRadius="8" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow3" Direction="270" ShadowDepth="4.5" BlurRadius="14" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow4" Direction="270" ShadowDepth="8" BlurRadius="25" Opacity="0.42" Color="#AA000000"/> -->
    <!-- <DropShadowEffect x:Key="Ui.Shadow5" Direction="270" ShadowDepth="13" BlurRadius="35" Opacity="0.42" Color="#AA000000"/> -->
    <Geometry x:Key="FeatherIcon.Down">F1 M24,24z M0,0z M6,9L6,9 12,15 18,9</Geometry>
    <Style TargetType="HeaderedContentControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <DockPanel>
                        <ContentPresenter DockPanel.Dock="Top"
                                          TextElement.FontSize="18"
                                          TextElement.Foreground="{f:ForegroundBrush}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                          Margin="0 0 0 16"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch" />

                        <ContentPresenter DockPanel.Dock="Bottom"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          TextElement.Foreground="{f:ForegroundBrush}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{f:Brush HighlightA3}" />
        <Setter Property="Background" Value="{f:Brush BackgroundLevel3}" />
        <Setter Property="BorderBrush" Value="{f:Brush BorderBrush}" />
        <Setter Property="Height" Value="12" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="True">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Height="10"
                                CornerRadius="5">
                            <Border x:Name="PART_Track" />
                        </Border>
                        <Border x:Name="PART_Indicator"
                                Margin="1,1,1,1"
                                Height="10"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Foreground}"
                                CornerRadius="5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <Border Margin="1,1,1,1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="4">

                                </Border>
                                <Rectangle x:Name="PART_Track"
                                           Margin="1,1,1,1" />
                                <Decorator x:Name="PART_Indicator"
                                           Margin="1,1,1,1"
                                           HorizontalAlignment="Left">
                                    <Grid x:Name="Animation" ClipToBounds="True">
                                        <Border x:Name="PART_GlowRect"
                                                Width="200"
                                                Margin="0,0,0,0"
                                                HorizontalAlignment="Left"
                                                Background="{TemplateBinding Foreground}"
                                                CornerRadius="4" />
                                    </Grid>
                                </Decorator>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ClearStyle.Expander.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Border Padding="{TemplateBinding Padding}"
                CornerRadius="3"
                Background="{TemplateBinding Background}">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="ContentPresenter"
                                  Grid.Column="0"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding Content}" />
                <Grid x:Name="ChevronGrid"
                      Grid.Column="1"
                      Margin="0"
                      VerticalAlignment="Center"
                      Background="Transparent"
                      RenderTransformOrigin="0.5, 0.5">
                    <Grid.RenderTransform>
                        <RotateTransform Angle="0" />
                    </Grid.RenderTransform>
                    <Path Data="F1 M24,24z M0,0z M6,9L6,9 12,15 18,9"
                          Stroke="{f:ForegroundBrush}"
                          StrokeThickness="1"
                          Stretch="Uniform"
                          Width="19"
                          Height="19" />
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ChevronGrid"
                                             Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)"
                                             To="180"
                                             Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ChevronGrid"
                                             Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)"
                                             To="0"
                                             Duration="00:00:00.167" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{f:BackgroundBrush}" />
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{f:Brush BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="11" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="4,4,4,4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--  Top level controls always visible  -->
                            <ToggleButton x:Name="ExpanderToggleButton"
                                          Margin="0"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Center"
                                          Background="Transparent"
                                          Content="{TemplateBinding Header}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          OverridesDefaultStyle="True"
                                          Template="{StaticResource ClearStyle.Expander.ToggleButton}" />

                            <!--  Collapsed content to expand  -->
                            <Border x:Name="ContentPresenterBorder"
                                    Grid.Row="1"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Opacity="0.0">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}" />
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY="0" />
                                </Border.LayoutTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentPresenterBorder" Property="BorderThickness" Value="0,1,0,0" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="00:00:00.167" />
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.Opacity)"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         From="1.0"
                                                         To="0"
                                                         Duration="00:00:00.167" />
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.Opacity)"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{f:Brush BackgroundLevel2}" TargetName="ExpanderToggleButton" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{f:Brush BackgroundDisabled}" />
                            <Setter Property="BorderBrush" Value="{f:Brush BackgroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{f:Brush ForegroundDisabled}" />
                            <Setter TargetName="ExpanderToggleButton" Property="Foreground" Value="{f:Brush ForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ClearStyle.Expander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{f:BackgroundBrush}" />
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{f:Brush BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="11" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="4,4,4,4">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--  Top level controls always visible  -->
                            <ToggleButton x:Name="ExpanderToggleButton"
                                          Margin="0"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Center"
                                          Background="Transparent"
                                          Content="{TemplateBinding Header}"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          OverridesDefaultStyle="True"
                                          Template="{StaticResource ClearStyle.Expander.ToggleButton}" />

                            <!--  Collapsed content to expand  -->
                            <Border x:Name="ContentPresenterBorder"
                                    Grid.Row="1"
                                    Background="Transparent"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Opacity="0.0">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}" />
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY="0" />
                                </Border.LayoutTransform>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentPresenterBorder" Property="BorderThickness" Value="0,1,0,0" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="00:00:00.167" />
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.Opacity)"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.LayoutTransform).(ScaleTransform.ScaleY)"
                                                         From="1.0"
                                                         To="0"
                                                         Duration="00:00:00.167" />
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterBorder"
                                                         Storyboard.TargetProperty="(Border.Opacity)"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{f:Brush BackgroundLevel2}" TargetName="ExpanderToggleButton" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{f:Brush BackgroundDisabled}" />
                            <Setter Property="BorderBrush" Value="{f:Brush BackgroundDisabled}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{f:Brush ForegroundDisabled}" />
                            <Setter TargetName="ExpanderToggleButton" Property="Foreground" Value="{f:Brush ForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearStyle.ComboBox.TextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="CaretBrush" Value="{f:Brush HighlightA3}" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Decorator x:Name="PART_ContentHost"
                               Margin="{TemplateBinding Padding}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               TextElement.Foreground="{TemplateBinding Foreground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearStyle.ComboBox.ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="PART_Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                        <ContentPresenter x:Name="PART_ContentHost"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearStyle.ComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border x:Name="PART_Bd"
                                Margin="{TemplateBinding Margin}"
                                Padding="8 0"
                                VerticalAlignment="Stretch"
                                SnapsToDevicePixels="True">
                            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="PART_Bd" Property="Background" Value="{f:OverlayBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Bd" Property="Background" Value="{f:Overlay2Brush}" />
                            <Setter Property="Foreground" Value="{f:Brush ForegroundInHighlight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{f:Brush ForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearStyle.ComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{f:ForegroundBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{f:Brush BorderBrush}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Popup.PopupAnimation" Value="Slide" />
        <Setter Property="Popup.Placement" Value="Bottom" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="PART_Bd"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Column="0"
                                  Margin="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_ContentPresenter"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      IsHitTestVisible="False"
                                                      TextElement.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                            <Grid x:Name="ChevronIcon"
                                  Grid.Column="1"
                                  Margin="8"
                                  VerticalAlignment="Center"
                                      Background="Transparent"
                                      RenderTransformOrigin="0.5, 0.5">
                                <Grid.RenderTransform>
                                    <RotateTransform Angle="0" />
                                </Grid.RenderTransform>
                                <Path Data="F1 M24,24z M0,0z M6,9L6,9 12,15 18,9"
                                          Stroke="{f:ForegroundBrush}"
                                          StrokeThickness="1"
                                          Stretch="Uniform"
                                          Width="19"
                                          Height="19" />
                            </Grid>
                            <Grid Grid.Column="0"
                                      Grid.ColumnSpan="2">
                                <ToggleButton x:Name="ToggleButton"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  ClickMode="Press"
                                                  Focusable="False"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ClearStyle.ComboBox.ToggleButton}" />
                            </Grid>
                            <Grid Grid.Column="0"
                                  Margin="{TemplateBinding Padding}">
                                <TextBox x:Name="PART_EditableTextBox"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             FontSize="{TemplateBinding FontSize}"
                                             Foreground="{TemplateBinding Foreground}"
                                             IsReadOnly="{TemplateBinding IsReadOnly}"
                                             Style="{StaticResource ClearStyle.ComboBox.TextBox}" />
                            </Grid>


                            <Popup x:Name="Popup"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Grid.Row="1"
                                       MinWidth="280"
                                       VerticalAlignment="Center"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       Placement="{TemplateBinding Popup.Placement}"
                                       PopupAnimation="{TemplateBinding Popup.PopupAnimation}"
                                       VerticalOffset="1">
                                <Border x:Name="DropDownBorder"
                                        Padding="0 16"
                                        Background="{f:Brush BackgroundLevel3}"
                                        BorderThickness="8"
                                        Effect="{StaticResource MenuItem.ShadowEffect2}"
                                        CornerRadius="12"
                                        SnapsToDevicePixels="True">
                                    <ScrollViewer MaxHeight="480"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                  SnapsToDevicePixels="True"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ChevronIcon"
                                                         Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                                         From="0"
                                                         To="180"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ChevronIcon"
                                                         Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                                         From="180"
                                                         To="0"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_Bd"
                                                         Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                         From="Transparent"
                                                         To="{f:Color BackgroundLevel2}"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="PART_Bd"
                                                         Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                         From="{f:Color BackgroundLevel2}"
                                                         To="Transparent"
                                                         Duration="00:00:00.167" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="84" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="False">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Bd" Property="Background" Value="{f:Brush BackgroundLevel1}" />
                            <Setter TargetName="PART_Bd" Property="BorderBrush" Value="{f:Brush HighlightA4}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Bd" Property="Background" Value="{f:Brush BackgroundLevel2}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{f:Brush ForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ClearStyle.ComboBoxItem}" TargetType="{x:Type ComboBoxItem}" />
    <Style BasedOn="{StaticResource ClearStyle.ComboBox}" TargetType="{x:Type ComboBox}" />

</ResourceDictionary>